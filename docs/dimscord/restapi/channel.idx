triggerTypingIndicator	dimscord/restapi/channel.html#triggerTypingIndicator,RestApi,string	channel: triggerTypingIndicator(api: RestApi; channel_id: string): owned(Future[void])	
addChannelMessagePin	dimscord/restapi/channel.html#addChannelMessagePin,RestApi,string,string,string	channel: addChannelMessagePin(api: RestApi; channel_id, message_id: string; reason = &quot;&quot;): owned(\n    Future[void])	
deleteChannelMessagePin	dimscord/restapi/channel.html#deleteChannelMessagePin,RestApi,string,string,string	channel: deleteChannelMessagePin(api: RestApi; channel_id, message_id: string;\n                        reason = &quot;&quot;): owned(Future[void])	
getChannelPins	dimscord/restapi/channel.html#getChannelPins,RestApi,string	channel: getChannelPins(api: RestApi; channel_id: string): Future[seq[Message]]	
editGuildChannel	dimscord/restapi/channel.html#editGuildChannel,RestApi,string,string	channel: editGuildChannel(api: RestApi; channel_id: string;\n                 name, parent_id, topic = none string;\n                 rate_limit_per_user, bitrate = none int;\n                 position, user_limit = none int;\n                 permission_overwrites = none seq[Overwrite]; nsfw = none bool;\n                 reason = &quot;&quot;): Future[GuildChannel]	
createGuildChannel	dimscord/restapi/channel.html#createGuildChannel,RestApi,string,string,int,string	channel: createGuildChannel(api: RestApi; guild_id, name: string; kind = 0;\n                   parent_id, topic = none string; nsfw = none bool;\n    rate_limit_per_user, bitrate, position, user_limit = none int;\n                   permission_overwrites = none seq[Overwrite]; reason = &quot;&quot;): Future[\n    GuildChannel]	
deleteChannel	dimscord/restapi/channel.html#deleteChannel,RestApi,string,string	channel: deleteChannel(api: RestApi; channel_id: string; reason = &quot;&quot;): owned(Future[void])	
editGuildChannelPermissions	dimscord/restapi/channel.html#editGuildChannelPermissions,RestApi,,,,PermObj,string	channel: editGuildChannelPermissions(api: RestApi;\n                            channel_id, perm_id, kind: string or int;\n                            perms: PermObj; reason = &quot;&quot;): owned(Future[void])	
getInvite	dimscord/restapi/channel.html#getInvite,RestApi,string	channel: getInvite(api: RestApi; code: string; with_counts, auth = false): Future[Invite]	
createChannelInvite	dimscord/restapi/channel.html#createChannelInvite,RestApi,string,int,int,string	channel: createChannelInvite(api: RestApi; channel_id: string; max_age = 86400;\n                    max_uses = 0; temp, unique = false;\n                    target_user = none string; target_user_type = none int;\n                    reason = &quot;&quot;): Future[Invite]	
deleteGuildChannelPermission	dimscord/restapi/channel.html#deleteGuildChannelPermission,RestApi,string,string,string	channel: deleteGuildChannelPermission(api: RestApi; channel_id, overwrite: string;\n                             reason = &quot;&quot;): owned(Future[void])	
deleteInvite	dimscord/restapi/channel.html#deleteInvite,RestApi,string,string	channel: deleteInvite(api: RestApi; code: string; reason = &quot;&quot;): owned(Future[void])	
getChannelInvites	dimscord/restapi/channel.html#getChannelInvites,RestApi,string	channel: getChannelInvites(api: RestApi; channel_id: string): Future[seq[Invite]]	
getGuildChannel	dimscord/restapi/channel.html#getGuildChannel,RestApi,string,string	channel: getGuildChannel(api: RestApi; guild_id, channel_id: string): Future[GuildChannel]	
getGuildChannels	dimscord/restapi/channel.html#getGuildChannels,RestApi,string	channel: getGuildChannels(api: RestApi; guild_id: string): Future[seq[GuildChannel]]	
editGuildChannelPositions	dimscord/restapi/channel.html#editGuildChannelPositions,RestApi,string,string,string	channel: editGuildChannelPositions(api: RestApi; guild_id, channel_id: string;\n                          position = none int; reason = &quot;&quot;): owned(Future[void])	
getChannelWebhooks	dimscord/restapi/channel.html#getChannelWebhooks,RestApi,string	channel: getChannelWebhooks(api: RestApi; channel_id: string): Future[seq[Webhook]]	
createWebhook	dimscord/restapi/channel.html#createWebhook,RestApi,string,string,string	channel: createWebhook(api: RestApi; channel_id, username: string; avatar = none string;\n              reason = &quot;&quot;): Future[Webhook]	
getWebhook	dimscord/restapi/channel.html#getWebhook,RestApi,string	channel: getWebhook(api: RestApi; webhook_id: string): Future[Webhook]	
deleteWebhook	dimscord/restapi/channel.html#deleteWebhook,RestApi,string,string	channel: deleteWebhook(api: RestApi; webhook_id: string; reason = &quot;&quot;): owned(Future[void])	
editWebhook	dimscord/restapi/channel.html#editWebhook,RestApi,string,string	channel: editWebhook(api: RestApi; webhook_id: string;\n            name, avatar, channel_id = none string; reason = &quot;&quot;): owned(\n    Future[void])	
